---
layout: post
title:  "Procedures SQL"
date:   2023-02-08 18:42:47 -0300
categories: SQL
thumbnail: "https://static.wixstatic.com/media/710ee0_2aa5cb3a46d042899977bab47bacfc10~mv2.jpg/v1/fill/w_1524,h_1016,al_c,q_90/710ee0_2aa5cb3a46d042899977bab47bacfc10~mv2.webp"
excerpt: "Entendendo e Criando para Efici√™ncia"
---

# Entendendo e Criando para Efici√™ncia

A linguagem SQL √© fundamental para interagir com bancos de dados. Uma das ferramentas mais poderosas que o SQL oferece s√£o os procedimentos armazenados ou procedures. Vamos mergulhar no que s√£o, como funcionam e como voc√™ pode criar os seus.

<p align="center">
  <img src="https://static.wixstatic.com/media/710ee0_2aa5cb3a46d042899977bab47bacfc10~mv2.jpg/v1/fill/w_1524,h_1016,al_c,q_90/710ee0_2aa5cb3a46d042899977bab47bacfc10~mv2.webp" width="500" height="300">
</p>

## O que s√£o Procedimentos Armazenados ou procedures?

Procedimentos armazenados s√£o blocos de c√≥digo SQL que s√£o salvos no banco de dados e podem ser reutilizados. Eles encapsulam uma sequ√™ncia de opera√ß√µes em uma √∫nica entidade, que pode ser invocada como uma fun√ß√£o.

## Benef√≠cios dos Procedimentos Armazenados:

Reutiliza√ß√£o de C√≥digo: Evita repetir o mesmo c√≥digo SQL.
    
Efici√™ncia: Executam mais rapidamente do que m√∫ltiplas instru√ß√µes SQL individuais.
    
Seguran√ßa: Podem restringir o acesso direto √†s tabelas de dados, servindo como uma camada adicional de seguran√ßa.

## Como Funcionam?

Os procedimentos armazenados ou procedures s√£o compilados e armazenados no banco de dados. Quando s√£o chamados, o banco de dados apenas executa o plano de execu√ß√£o j√° compilado, em vez de recompilar o SQL, tornando a execu√ß√£o mais r√°pida.

## Criando um Procedimento Armazenado:

#### Aqui est√° um exemplo b√°sico de como criar um procedimento armazenado:

```sql
CREATE PROCEDURE NomeDoProcedimento
AS
BEGIN -- Abre um bloco de c√≥digo
    
    -- Seu c√≥digo SQL aqui
    SELECT 
      * 
    FROM NomeDaTabela;

END; -- Fecha o bloco de c√≥digo
```

#### Para invocar o procedimento armazenado:

```sql
EXEC NomeDoProcedimento;
```

#### Par√¢metros em Procedimentos Armazenados:

Voc√™ pode tornar seus procedimentos armazenados mais flex√≠veis usando par√¢metros:

```sql
CREATE PROCEDURE NomeDoProcedimento @NomeParametro TipoDeDado
AS
BEGIN
    -- Seu c√≥digo SQL aqui
    SELECT 
      * 
    FROM NomeDaTabela 
    WHERE Coluna = @NomeParametro;
END;
```

Para invocar o procedimento armazenado com um par√¢metro:

```sql
EXEC NomeDoProcedimento @NomeParametro = 'ValorDesejado';
```

## Sempre pense em otimizar sua procedure

Otimizar procedimentos armazenados n√£o √© apenas uma quest√£o de velocidade. Trata-se de escalabilidade. √Ä medida que sua base de dados cresce, consultas n√£o otimizadas podem se tornar o gargalo de sua aplica√ß√£o.

## T√©cnicas de Otimiza√ß√£o:

1. √çndices Apropriados

√çndices s√£o como √≠ndices de livros para bancos de dados. Eles permitem que o sistema de banco de dados encontre dados sem ler toda a tabela.

```sql
CREATE INDEX idx_nome_coluna ON nome_tabela(nome_coluna);
```

2. Subconsultas vs. Jun√ß√µes

Jun√ß√µes s√£o poderosas, mas podem ser caras em termos de desempenho. Subconsultas, em `certos cen√°rios`, podem ser mais eficientes, mas tome cuidado nem sempre √© o melhor caminho usar subconsultas.

```sql
SELECT 
  coluna1
  , coluna2 
FROM tabela1 
WHERE coluna1 IN (
                  SELECT 
                    coluna3 
                  FROM tabela2 
                  WHERE condicao);
```

3. Evite Cursores

Cursores permitem a itera√ß√£o atrav√©s de um conjunto de resultados linha por linha. No entanto, eles s√£o lentos e, muitas vezes, uma abordagem baseada em conjunto √© mais eficiente.

4. Teste de Performance

Antes de implementar qualquer otimiza√ß√£o, saiba onde voc√™ est√°. Use ferramentas e comandos para analisar o desempenho de suas consultas.

```sql
EXPLAIN ANALYZE SELECT coluna1, coluna2 FROM tabela1 WHERE coluna1 ='valor';
```

## Conclus√£o

Os procedimentos armazenados s√£o ferramentas poderosas que oferecem efici√™ncia, seguran√ßa e reutiliza√ß√£o de c√≥digo. Eles s√£o essenciais para desenvolvedores e administradores de banco de dados que desejam otimizar suas opera√ß√µes e garantir que suas aplica√ß√µes sejam escal√°veis e eficientes. Ao dominar os procedimentos armazenados, voc√™ estar√° equipado com uma habilidade valiosa que pode transformar a maneira como voc√™ interage com bancos de dados.

Selo üßô‚Äç‚ôÇÔ∏è:

[<img src="https://avatars.githubusercontent.com/u/117866866?v=4" width="100" height="100">](https://github.com/Linhares015)
