---
layout: post
title:  "SQL para Resolver Problemas do Dia a Dia"
date:   2023-03-20 18:42:47 -0300
categories: SQL
thumbnail: "https://static.wixstatic.com/media/710ee0_3b8fe7f2ba3c42aab47d316eb866977b~mv2.jpg/v1/fill/w_2916,h_1640,al_c,q_90/710ee0_3b8fe7f2ba3c42aab47d316eb866977b~mv2.webp"
excerpt: " "
---

## Introdu√ß√£o

O SQL (Structured Query Language) √© uma linguagem de programa√ß√£o amplamente utilizada para gerenciar bancos de dados relacionais. No dia a dia, os desenvolvedores de banco de dados e analistas de dados podem encontrar v√°rias situa√ß√µes em que ajustes espec√≠ficos s√£o necess√°rios para garantir a qualidade e a consist√™ncia dos dados. Este artigo discute algumas dessas situa√ß√µes comuns e fornece exemplos de como ajust√°-las usando o SQL.

<p align="center">
  <img src="https://static.wixstatic.com/media/710ee0_3b8fe7f2ba3c42aab47d316eb866977b~mv2.jpg/v1/fill/w_2916,h_1640,al_c,q_90/710ee0_3b8fe7f2ba3c42aab47d316eb866977b~mv2.webp" width="500" height="300">
</p>

1. Preencher campos com zeros √† esquerda

Um problema comum ocorre quando os n√∫meros, como CNPJ, CPF ou c√≥digos de produtos, s√£o armazenados como texto e precisam ser preenchidos com zeros √† esquerda para atingir um determinado comprimento. No SQL Server, voc√™ pode usar a fun√ß√£o RIGHT em combina√ß√£o com a fun√ß√£o REPLICATE para resolver esse problema.

Exemplo:

```sql
UPDATE sua_tabela 
    SET cnpj =RIGHT(REPLICATE('0', 14) + cnpj, 14);
```

2. Remover espa√ßos em branco indesejados

Os espa√ßos em branco indesejados no in√≠cio ou no final das strings podem causar problemas de correspond√™ncia ou classifica√ß√£o. Para remover espa√ßos em branco do in√≠cio e do final das strings, use a fun√ß√£o TRIM.

Exemplo:

```sql
UPDATE sua_tabela 
    SET nome =TRIM(nome);
```

3. Converter strings para mai√∫sculas ou min√∫sculas

√Äs vezes, √© necess√°rio converter strings para mai√∫sculas ou min√∫sculas para garantir a consist√™ncia dos dados e facilitar a correspond√™ncia e a pesquisa. Use as fun√ß√µes UPPER e LOWER para converter strings para mai√∫sculas ou min√∫sculas, respectivamente.

Exemplo:

```sql
UPDATE sua_tabela 
    SET nome = UPPER(nome);
```

4. Dividir strings em v√°rias colunas

Em alguns casos, os dados s√£o armazenados como strings concatenadas e √© necess√°rio dividi-los em v√°rias colunas. Use a fun√ß√£o SUBSTRING em combina√ß√£o com fun√ß√µes como CHARINDEX ou PATINDEX para extrair partes de uma string.

Exemplo:

```sql
UPDATE sua_tabela 
    SET nome = SUBSTRING(nome_completo, 1, CHARINDEX(' ', nome_completo) -1),
                sobrenome = SUBSTRING(nome_completo, CHARINDEX(' ', nome_completo) +1, LEN(nome_completo));
```

5. Substituir partes de uma string

Se voc√™ precisa substituir partes de uma string, como corrigir erros de digita√ß√£o ou atualizar informa√ß√µes desatualizadas, use a fun√ß√£o REPLACE.

Exemplo:

```sql
UPDATE sua_tabela 
    SET endereco = REPLACE(endereco, 'R. ', 'Rua ');
```

## Conclus√£o

O SQL oferece uma ampla variedade de fun√ß√µes e recursos para ajudar os desenvolvedores e analistas de dados a ajustar e limpar dados em bancos de dados relacionais. Dominar essas fun√ß√µes e t√©cnicas pode melhorar a qualidade dos dados e facilitar a an√°lise e a manuten√ß√£o do banco de dados.

[Linhares015 - üßô‚Äç‚ôÇÔ∏è](https://github.com/Linhares015)