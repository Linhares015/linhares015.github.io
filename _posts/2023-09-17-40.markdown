---
layout: post
title:  "Manual Di√°rio Git"
date:   2023-09-17 00:42:47 -0300
categories: Dados
thumbnail: "https://www.ratamero.com/blog/assets/git-and-github-logos.png"
excerpt: " "
---

Git √© uma ferramenta de controle de vers√£o distribu√≠da que permite rastrear mudan√ßas em arquivos e coordenar o trabalho entre m√∫ltiplos colaboradores. Este manual fornece uma vis√£o geral dos principais comandos e insights di√°rios para auxiliar os usu√°rios no dia a dia.
Principais Comandos Git:

## Configura√ß√£o Inicial:

```bash
git config --global user.name "Seu Nome" #Define o nome do usu√°rio.
```

```bash
git config --global user.email "seuemail@email.com" #Define o email do usu√°rio.
```
    
## Iniciar um Reposit√≥rio:

```bash        
git init #Inicializa um novo reposit√≥rio Git.
```

```bash
git clone [URL] #Clona (ou baixa) um reposit√≥rio existente.
```

## Trabalhando com Arquivos:

```bash        
git add [arquivo] #Adiciona um arquivo ao √≠ndice.
```        

```bash  
git commit -m "Mensagem do commit" #Registra as mudan√ßas feitas no reposit√≥rio.
```

## Navega√ß√£o e Hist√≥rico:
        
```bash
git status #Mostra o status dos arquivos no reposit√≥rio.
```

```bash
git log #Exibe o hist√≥rico de commits.
```
    
## Trabalhando com Branches:
        
```bash
git branch #Lista todas as branches.
```

```bash
git branch [nome_da_branch] #Cria uma nova branch.
```

```bash
git checkout [nome_da_branch] #Muda para uma branch espec√≠fica.
```

```bash
git merge [nome_da_branch] #Mescla as mudan√ßas de uma branch na branch atual.
```

## Sincroniza√ß√£o:
        
```bash
git pull #Baixa as mudan√ßas do reposit√≥rio remoto e mescla com a branch local.
```

```bash
git push #Envia as mudan√ßas locais para o reposit√≥rio remoto.
```

## Inspe√ß√£o e Compara√ß√£o:
        
```bash        
git show #Mostra v√°rios tipos de objetos.
```

```bash
git diff #Mostra as diferen√ßas entre commits, commit e √°rvore de trabalho, etc.
```

```bash
git difftool #Mostra as diferen√ßas usando ferramentas externas.
```        

```bash        
git shortlog #Resume o log de entrada.
```

```bash
git describe #Descreve um ref de commit usando o nome de tag mais recente.
```

## Patching:
        
```bash        
git apply #Aplica uma s√©rie de patches de um arquivo de caixa de correio.
```

```bash
git cherry-pick #Aplica as mudan√ßas de um commit existente.
```

```bash
git rebase #Reaplica commits em cima de outro commit base.
```

```bash
git revert #Reverte algumas mudan√ßas existentes.
```

## Debugging:
        
```bash        
git bisect #Usa a busca bin√°ria para encontrar o commit que introduziu um bug.
```

```bash
git blame #Mostra qual commit alterou cada linha de um arquivo.
```

## Administra√ß√£o:
        
```bash        
git clean #Remove arquivos n√£o rastreados do diret√≥rio de trabalho.
```

```bash
git gc #Limpa reposit√≥rio desnecess√°rio.
```        

```bash        
git reflog #Gerencia o log de refer√™ncia.
```

## Comandos Avan√ßados:

```bash
git stash #Guarda e restaura mudan√ßas tempor√°rias.
```

```bash
git worktree #Gerencia m√∫ltiplas √°rvores de trabalho.
```


## Insights:

- Sempre fa√ßa commits pequenos e frequentes. Isso torna mais f√°cil identificar e corrigir problemas.
    
- Antes de fazer um push, sempre fa√ßa um pull para garantir que voc√™ tenha as √∫ltimas mudan√ßas.
    
- Use mensagens de commit claras e descritivas para ajudar outros colaboradores a entender suas mudan√ßas.

## Problemas Comuns e Solu√ß√µes:

### Conflitos de Merge:
        
- Problema: Ao tentar mesclar branches, voc√™ pode encontrar conflitos.
        
- Solu√ß√£o: Abra os arquivos com conflitos, resolva as discrep√¢ncias e fa√ßa um novo commit.

Um jeito de fazer isso √© voltar a sua branch original atualizar ela com o `git pull` e depois ir a branch que estava desenvolvendo e digitar `git merge "branch origina"` assim as duas ficar√£o sem conflito. 

### Commit Errado:
        
- Problema: Voc√™ fez um commit com arquivos errados ou mensagem de commit incorreta.
        
- Solu√ß√£o: Use git commit --amend para modificar o √∫ltimo commit ou git reset para desfazer commits.

### Arquivos Deletados Acidentalmente:
        
- Problema: Voc√™ deletou acidentalmente um arquivo.
        
- Solu√ß√£o: Use `git checkout -- [arquivo]` para restaurar um arquivo deletado.

## B√¥nus: Recursos Adicionais:

[Visual Git Cheat Sheet:](https://ndpsoftware.com/git-cheatsheet.html) Um guia visual para os comandos Git.

[Pro Git Book:](https://git-scm.com/book) O livro Pro Git escrito por Scott Chacon e Ben Straub est√° dispon√≠vel para leitura online gratuitamente.

Este manual serve como um guia de consulta r√°pida para os principais comandos e pr√°ticas recomendadas do Git. Recomenda-se tamb√©m consultar a [documenta√ß√£o oficial do Git](https://git-scm.com/doc) para obter informa√ß√µes mais detalhadas e atualizadas.
 
[Linhares015 - üßô‚Äç‚ôÇÔ∏è](https://github.com/Linhares015)